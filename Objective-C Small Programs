-----------------------------------------------------------------------------------------------------------------------------
// Fibonacci Series 
-----------------------------------------------------------------------------------------------------------------------------

-(int)fib:(int)num{
    if (num == 0) {
        return 0;
    }
    if (num == 1) {
        return 1;
    }
    return [self fib:num - 1] + [self fib:num - 2];
}

------------------------------------------------------------------------------------------------------------------------
// Bubble Short for an NSMutableArray...
------------------------------------------------------------------------------------------------------------------------

-(NSArray *)bubbleSort:(NSMutableArray *)unsortedDataArray
{
    long count = unsortedDataArray.count;
    int i;
    bool swapped = TRUE;
    while (swapped){
    swapped = FALSE;
    for (i=1; i<count;i++)         
    {             
            if ([unsortedDataArray objectAtIndex:(i-1)] > [unsortedDataArray objectAtIndex:i])
            {
                [unsortedDataArray exchangeObjectAtIndex:(i-1) withObjectAtIndex:i];
                swapped = TRUE;
            }
            //bubbleSortCount ++; //Increment the count everytime a switch is done, this line is not required in the production implementation.
        }
    }
    return unsortedDataArray;
}

--------------------------------------------------------------------------------------------------------------------
// Reverse a NSString via Objective-c 
--------------------------------------------------------------------------------------------------------------------
-(NSMutableString *)reverseAString{
NSString *myString = @"abcdefghijABCDEFGHIJ12345678";
NSMutableString *reversedString = [NSMutableString stringWithCapacity:[myString length]];

[myString enumerateSubstringsInRange:NSMakeRange(0,[myString length]) 
                             options:(NSStringEnumerationReverse | NSStringEnumerationByComposedCharacterSequences)
                          usingBlock:^(NSString *substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop) {
                            [reversedString appendString:substring];
                        }];
    return  reversedString;                      
 }


--------------------------------------------------------------------------------------------------------------------
// Find MAX AND MIN Value from an Array
--------------------------------------------------------------------------------------------------------------------

1-
  NSNumber *max=[numberArray valueForKeyPath:@"@max.doubleValue"];
  NSNumber *min=[numberArray valueForKeyPath:@"@min.doubleValue"];

2-
  float xmax = -MAXFLOAT;
  float xmin = MAXFLOAT;
  for (NSNumber *num in numbers) {
    float x = num.floatValue;
    if (x < xmin) xmin = x;
    if (x > xmax) xmax = x;
  }
